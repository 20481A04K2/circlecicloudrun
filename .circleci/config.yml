version: 2.1

executors:
  python-linter:
    docker:
      - image: circleci/python:3.9

# Common GCP environment variables
environment_defaults: &gcp_env
  GCP_PROJECT_ID: sylvan-hydra-464904-d9
  GCP_REGION: asia-east1
  ARTIFACT_REPO_NAME: vamsi-artifact
  CLOUD_RUN_SERVICE_NAME: flask-service

jobs:
  test:
    executor: python-linter
    steps:
      - checkout
      - run:
          name: 🔍 Lint Python code
          command: |
            pip install pylint
            pylint app.py --disable=import-error || true

  build:
    machine:
      image: ubuntu-2204:2023.10.1
    environment: *gcp_env
    steps:
      - checkout

      - run:
          name: 🔐 Install gcloud & Authenticate
          command: |
            sudo apt-get update && sudo apt-get install -y curl apt-transport-https gnupg unzip
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk

            echo "$GCP_SA_KEY_B64" | base64 -d > gcloud-key.json
            gcloud auth activate-service-account --key-file=gcloud-key.json
            gcloud config set project "$GCP_PROJECT_ID"

      - run:
          name: ⚙️ Build Docker image
          command: |
            export IMAGE_NAME="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$ARTIFACT_REPO_NAME/$CLOUD_RUN_SERVICE_NAME"
            docker build -t "$IMAGE_NAME" .

      - persist_to_workspace:
          root: .
          paths:
            - .

  push:
    machine:
      image: ubuntu-2204:2023.10.1
    environment: *gcp_env
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 🔐 Install gcloud & Push Docker image
          command: |
            sudo apt-get update && sudo apt-get install -y curl apt-transport-https gnupg
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk

            echo "$GCP_SA_KEY_B64" | base64 -d > gcloud-key.json
            gcloud auth activate-service-account --key-file=gcloud-key.json
            gcloud config set project "$GCP_PROJECT_ID"

            export IMAGE_NAME="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$ARTIFACT_REPO_NAME/$CLOUD_RUN_SERVICE_NAME"
            gcloud auth configure-docker "$GCP_REGION-docker.pkg.dev" --quiet
            docker push "$IMAGE_NAME"

  deploy:
    machine:
      image: ubuntu-2204:2023.10.1
    environment: *gcp_env
    steps:
      - run:
          name: 🔐 Install gcloud & Deploy to Cloud Run
          command: |
            sudo apt-get update && sudo apt-get install -y curl apt-transport-https gnupg
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk

            echo "$GCP_SA_KEY_B64" | base64 -d > gcloud-key.json
            gcloud auth activate-service-account --key-file=gcloud-key.json
            gcloud config set project "$GCP_PROJECT_ID"
            gcloud config set run/region "$GCP_REGION"

            gcloud services enable run.googleapis.com artifactregistry.googleapis.com || true

            export IMAGE_NAME="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$ARTIFACT_REPO_NAME/$CLOUD_RUN_SERVICE_NAME"
            gcloud run deploy "$CLOUD_RUN_SERVICE_NAME" \
              --image "$IMAGE_NAME" \
              --platform managed \
              --region "$GCP_REGION" \
              --allow-unauthenticated

workflows:
  version: 2
  test-build-push-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - push:
          requires:
            - build
      - deploy:
          requires:
            - push
