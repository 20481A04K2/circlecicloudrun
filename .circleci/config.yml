version: 2.1

executors:
  python-linter:
    docker:
      - image: circleci/python:3.9

  custom-gcloud:
    docker:
      - image: google/cloud-sdk:slim


jobs:
  test:
    executor: python-linter
    steps:
      - checkout
      - run:
          name: üîç Lint Python code
          command: |
            pip install pylint
            pylint app.py --disable=import-error || true

  build-and-deploy:
    executor: custom-gcloud
    environment:
      ARTIFACT_REPO_NAME: vamsi-artifact
      CLOUD_RUN_SERVICE_NAME: flask-service
      GCP_REGION: asia-east1
    steps:
      - checkout

      - run:
          name: ‚úÖ Validate required environment variables
          shell: /bin/bash
          command: |
            REQUIRED_VARS=("GCP_SA_KEY_B64" "GCP_PROJECT_ID" "GCP_REGION" "ARTIFACT_REPO_NAME" "CLOUD_RUN_SERVICE_NAME")
            for i in "${REQUIRED_VARS[@]}"; do
              if [[ -z "${!i}" ]]; then
                echo "‚ùå ERROR: Missing environment variable $i"
                exit 1
              else
                echo "‚úÖ $i is set"
              fi
            done

      - run:
          name: üîê Authenticate with GCP
          command: |
            echo "$GCP_SA_KEY_B64" | base64 -d > gcloud-key.json
            gcloud auth activate-service-account --key-file=gcloud-key.json
            gcloud config set project "$GCP_PROJECT_ID"
            gcloud config set artifacts/location "$GCP_REGION"
            gcloud config set run/region "$GCP_REGION"

      - run:
          name: üß™ Enable required services
          command: |
            gcloud services enable run.googleapis.com artifactregistry.googleapis.com

      - run:
          name: ‚öôÔ∏è Build & Push Docker image to Artifact Registry
          command: |
            export IMAGE_NAME="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$ARTIFACT_REPO_NAME/$CLOUD_RUN_SERVICE_NAME"
            gcloud auth configure-docker "$GCP_REGION-docker.pkg.dev" --quiet
            docker build -t "$IMAGE_NAME" .
            docker push "$IMAGE_NAME"

      - run:
          name: üöÄ Deploy or Update Cloud Run Service
          command: |
            export IMAGE_NAME="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$ARTIFACT_REPO_NAME/$CLOUD_RUN_SERVICE_NAME"
            gcloud run deploy "$CLOUD_RUN_SERVICE_NAME" \
              --image "$IMAGE_NAME" \
              --platform managed \
              --region "$GCP_REGION" \
              --allow-unauthenticated

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
      - build-and-deploy:
          requires:
            - test
